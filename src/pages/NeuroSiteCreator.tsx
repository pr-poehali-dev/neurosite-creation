import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Card } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Loader2, Wand2 } from "lucide-react";

const NeuroSiteCreator = () => {
  const [prompt, setPrompt] = useState("");
  const [isGenerating, setIsGenerating] = useState(false);
  const [result, setResult] = useState("");
  const [siteName, setSiteName] = useState("");

  const handleGenerate = () => {
    if (!prompt.trim()) return;
    
    setIsGenerating(true);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
    setTimeout(() => {
      setResult(`–í–∞—à —Å–∞–π—Ç "${siteName}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –í–æ—Ç –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: 
      
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <title>${siteName}</title>
  <style>
    body { font-family: Arial; color: #333; max-width: 1200px; margin: 0 auto; padding: 20px; }
    .header { text-align: center; margin-bottom: 40px; }
    .content { display: grid; grid-template-columns: 1fr 1fr; gap: 30px; }
    @media (max-width: 768px) { .content { grid-template-columns: 1fr; } }
  </style>
</head>
<body>
  <div class="header">
    <h1>${siteName}</h1>
    <p>–°–∞–π—Ç —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–∏</p>
  </div>
  <div class="content">
    <div>
      <h2>–û –Ω–∞—Å</h2>
      <p>${prompt.substring(0, 150)}...</p>
    </div>
    <div>
      <h2>–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</h2>
      <ul>
        <li>–ö–∞—á–µ—Å—Ç–≤–æ</li>
        <li>–°–∫–æ—Ä–æ—Å—Ç—å</li>
        <li>–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</li>
      </ul>
    </div>
  </div>
</body>
</html>
      `);
      setIsGenerating(false);
    }, 2000);
  };

  return (
    <div className="container px-4 py-8 max-w-6xl">
      <h1 className="text-4xl font-bold text-center mb-8">
        –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–∞ —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ üöÄ
      </h1>
      
      <p className="text-center mb-10 text-lg text-muted-foreground">
        –û–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π —Å–∞–π—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å, –∏ –Ω–∞—à–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –µ–≥–æ –¥–ª—è –≤–∞—Å!
      </p>
      
      <Card className="p-6 mb-8">
        <div className="mb-4">
          <label className="block mb-2 font-medium">–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞</label>
          <Input 
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞" 
            value={siteName}
            onChange={(e) => setSiteName(e.target.value)}
            className="mb-4"
          />
          
          <label className="block mb-2 font-medium">–í–∞—à –∑–∞–ø—Ä–æ—Å</label>
          <Textarea 
            placeholder="–û–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ, –∫–∞–∫–æ–π —Å–∞–π—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å..." 
            value={prompt}
            onChange={(e) => setPrompt(e.target.value)}
            className="min-h-32 mb-4"
          />
        </div>
        
        <Button 
          onClick={handleGenerate} 
          className="w-full" 
          disabled={isGenerating || !prompt.trim() || !siteName.trim()}
        >
          {isGenerating ? (
            <>
              <Loader2 className="mr-2 h-4 w-4 animate-spin" />
              –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∞–π—Ç–∞...
            </>
          ) : (
            <>
              <Wand2 className="mr-2 h-4 w-4" />
              –°–æ–∑–¥–∞—Ç—å —Å–∞–π—Ç
            </>
          )}
        </Button>
      </Card>

      {result && (
        <Tabs defaultValue="preview" className="mb-8">
          <TabsList className="grid w-full grid-cols-2">
            <TabsTrigger value="preview">–ü—Ä–µ–≤—å—é</TabsTrigger>
            <TabsTrigger value="code">–ö–æ–¥ —Å–∞–π—Ç–∞</TabsTrigger>
          </TabsList>
          <TabsContent value="preview" className="p-4 border rounded-md">
            <div dangerouslySetInnerHTML={{ __html: result.split('<!DOCTYPE html>')[1] }} />
          </TabsContent>
          <TabsContent value="code">
            <pre className="p-4 bg-muted rounded-md overflow-auto max-h-96">
              <code>{result}</code>
            </pre>
            <div className="mt-4 flex justify-end">
              <Button>–°–∫–∞—á–∞—Ç—å HTML</Button>
            </div>
          </TabsContent>
        </Tabs>
      )}
      
      <div className="mt-8 text-center">
        <h2 className="text-2xl font-bold mb-4">–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</h2>
        <p className="text-muted-foreground mb-6">
          –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π —Å–∞–π—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å, –∏ –Ω–∞—à–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç
          HTML-–∫–æ–¥ —Å–∞–π—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è.
        </p>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="p-4 border rounded-md">
            <div className="text-3xl mb-2">‚úçÔ∏è</div>
            <h3 className="font-medium mb-2">1. –û–ø–∏—à–∏—Ç–µ</h3>
            <p className="text-sm text-muted-foreground">
              –ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π —Å–∞–π—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å
            </p>
          </div>
          <div className="p-4 border rounded-md">
            <div className="text-3xl mb-2">ü§ñ</div>
            <h3 className="font-medium mb-2">2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è</h3>
            <p className="text-sm text-muted-foreground">
              –ù–µ–π—Ä–æ—Å–µ—Ç—å –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –∏ —Å–æ–∑–¥–∞–µ—Ç —Å–∞–π—Ç
            </p>
          </div>
          <div className="p-4 border rounded-md">
            <div className="text-3xl mb-2">üöÄ</div>
            <h3 className="font-medium mb-2">3. –ì–æ—Ç–æ–≤–æ!</h3>
            <p className="text-sm text-muted-foreground">
              –°–∫–∞—á–∞–π—Ç–µ –≥–æ—Ç–æ–≤—ã–π HTML-–∫–æ–¥ –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default NeuroSiteCreator;
